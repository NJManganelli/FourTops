#define TestTree_cxx
#include "TestTree.h"
#include <TH2.h>
#include <TH1.h>
#include <TCanvas.h>
#include <TStyle.h>
#include <TCanvas.h>
#include <TStyle.h>

void TestTree::Loop()
{
//   In a ROOT session, you can do:
//      Root > .L TestTree.C
//      Root > TestTree t
//      Root > t.GetEntry(12); // Fill t data members with entry number 12
//      Root > t.Show();       // Show values of entry 12
//      Root > t.Show(16);     // Read and show values of entry 16
//      Root > t.Loop();       // Loop on all entries
//

//     This is the loop skeleton where:
//    jentry is the global entry number in the chain
//    ientry is the entry number in the current Tree
//  Note that the argument to GetEntry must be:
//    jentry for TChain::GetEntry
//    ientry for TTree::GetEntry and TBranch::GetEntry
//
//       To read only selected branches, Insert statements like:
// METHOD1:
//    fChain->SetBranchStatus("*",0);  // disable all branches
//    fChain->SetBranchStatus("branchname",1);  // activate branchname
// METHOD2: replace line
//    fChain->GetEntry(jentry);       //read all branches
//by  b_branchname->GetEntry(ientry); //read only this branch
   if (fChain == 0) return;

   gStyle->SetOptStat(0000);

   Long64_t nentries = fChain->GetEntriesFast();


   //   TH2D * h2d_1 = new TH2D("TopmassVsBDT","TopmassVsBDT",200,-1,1,200,0,1200); 
  TH2D * h2d_1 = new TH2D("TopmassVsBDT","TopmassVsBDT",200,0,1200,200,-1,1); 

  TH2D * h2d_2 = new TH2D("DijetmassVsBDT","DijetmassVsBDT",200,0,1200,200,-1,1); 
  TH2D * h2d_3 = new TH2D("DijetmassVsBDT","DijetmassVsBDT",200,0,1200,200,-1,1); 


 TH2D * h2d_4 = new TH2D("AnThWhVsBDT","AnThWhVsBDT",100,0,3.14,200,-1,1); 
 TH2D * h2d_5 = new TH2D("AnThWhVsBDT","AnThWhVsBDT",100,0,3.14,200,-1,1); 


  TH1F * h1d_1 = new TH1F("Topmass","TopmassVsBDT",100,-1,1); 

  //  TH1F * h1d_1 = new TH1F("Topmass","TopmassVsBDT",100,-1,1); 


  h2d_1->SetXTitle("Tri jet mass");
  h2d_1->SetYTitle("BDT discriminator");
  h2d_1->SetTitle(" ");


  h2d_2->SetXTitle("Di-jet mass");
  h2d_2->SetYTitle("BDT discriminator");
  h2d_2->SetTitle(" ");

  h2d_3->SetXTitle("Di-jet mass");
  h2d_3->SetYTitle("BDT discriminator");
  h2d_3->SetTitle(" ");


   Long64_t nbytes = 0, nb = 0;
   for (Long64_t jentry=0; jentry<nentries;jentry++) {
      Long64_t ientry = LoadTree(jentry);
      if (ientry < 0) break;

      if(BDT < -0.5) {

	h2d_2->Fill(HadrWmass,BDT);
	h2d_4->Fill(ThPtOverSumPt,BDT);
	  }else if(BDT > -0.5) {
	h2d_3->Fill(HadrWmass,BDT);
	h2d_5->Fill(ThPtOverSumPt,BDT);


}
      h2d_1->Fill(TopMass,BDT);
      h1d_1->Fill(BDT);


      nb = fChain->GetEntry(jentry);   nbytes += nb;



      // if (Cut(ientry) < 0) continue;
   }

   //  h1d_1->Draw();
   // TCanvas * c2 = new TCanvas();
   //   h2d_2->Draw();

   // TCanvas * c3 = new TCanvas();
   //h2d_3->Draw();

  TCanvas * c4 = new TCanvas();
  h2d_2->Draw();

  TCanvas * c5 = new TCanvas();
  h2d_3->Draw();

   //   h2d_1->Draw();

}

